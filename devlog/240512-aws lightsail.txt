aws lightsail 에서 인스턴스 생성

// 초기생성
region : 서울
OS : OS  only, Amazon Linux 2
인스턴스 플랜 : memory가 500MB 이상인 플랜
인스턴스 이름 설정 후 인스턴스 생성

// 네트워킹 관리
네크워킹 탭에서
	-> 인스턴스 상세보기 - 네트워크 - 고정IP 생성
	-> 규칙추가 : 애플리케이션으로 MySQL/Aurora, HTTPS 등 선택하여 추가 가능

// SSH 접속
lightsail 인스턴스 페이지에서 바로 terminal 접속 가능. 

// OS 설정
- 최초 실행 시 sudo yum update
- sudo hostnamectl set-hostname username
- sudo timedatectl set-timezone Asia/Seoul

// java 설치
- yum list | grep java-17
	-> headless 를 설치(GUI 관련 내용이 없는 버전)
- sudo yum install java-17-amazon-corretto-headless.x86_64
- java -version

// mariadb 설치
- amazon-linux-extras | grep maria
	-> yum list 로 설치 가능한 mariadb 는 5.x 버전이므로 위 방법으로 설치
- sudo amazon-linux-extras install mariadb10.5
- mariadb -V

- systemctl status mariadb
	-> Active: inactive (dead) 라면 작동하지 않는 상태
- sudo systemctl start mariadb

- sudo mysqladmin -u root -p password
	-> 아무거나 입력
		-> root 계정의 새로운 password 설정
mysql 
- mysql -u root -p
	-> 방금 설정한 password 설정

// user 를 '%' 로 설정하면 외부 아무데서나 접속이 가능하므로 위험함.
```
CREATE USER `username`@`localhost` IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO `username`@`localhost`;
FLUSH PRIVILEGES;
SHOW GRANTS FOR `username`@`localhost`;
```

// jar 실행
filezilla 를 열어서 새 사이트 추가
	-> SFTP, 인스턴스의 고정 IP, 포트는 공란, 로그온 유형=키 파일, 사용자는 ec2-user, 키 파일은 인스턴스-연결 탭 아래쪽에서 다운로드한 것을 첨부

- java -jar app.jar --spring.profiles.active=stg
	-> 포어그라운드 실행
- nohup java -jar app.jar --spring.profiles.active=stg >/dev/null 2>&1 &
	-> >/dev/null 2>&1 : nohup 의 로그를 생성하지 않음.
	-> & : 백그라운드 실행

// jar 종료
- ps -ef | grep .jar
	-> PID 확인
- kill -9 <PID>

// 이후 인스턴스 상세 페이지의 스냅샷 탭을 통해 스냅샷을 만들어 관리할 수 있다.